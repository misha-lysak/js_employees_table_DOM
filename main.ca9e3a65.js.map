{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","rows","querySelectorAll","employeeForm","createElement","classList","add","selecteHandler","e","selectRow","target","closest","contains","children","forEach","employee","remove","parentNode","addEventListener","insertAdjacentHTML","body","append","pushNotification","positionTop","positionRight","title","description","type","notification","titleNotification","descriptionNotification","dataset","qa","innerText","style","top","right","setTimeout","submit","input","select","addToForm","preventDefault","inputValueName","value","inputValuePosition","selectValueOffice","inputValueAge","inputValueSalary","length","toLocaleString","convertToNumber","string","replace","count","sorted","th","thIndex","cellIndex","rowsList","sort","currentString","nextString","currentStringText","cells","nextStringText","localeCompare","currentItem","nextItem","currentItemNumber","nextItemNumber","row","removeChild","appendChild"],"mappings":"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","file":"main.ca9e3a65.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = tbody.querySelectorAll('tr');\nconst employeeForm = document.createElement('form');\n\nemployeeForm.classList.add('new-employee-form');\n\nconst selecteHandler = (e) => {\n  const selectRow = e.target.closest('tr');\n\n  if (!selectRow || !tbody.contains(selectRow)) {\n    return;\n  }\n\n  [...tbody.children].forEach(employee => {\n    employee.classList.remove('active');\n  });\n\n  const selectTr = e.target.parentNode;\n\n  selectTr.classList.add('active');\n};\n\ntbody.addEventListener('click', selecteHandler);\n\nemployeeForm.insertAdjacentHTML('afterbegin', `\n  <label for=\"name\">\n    Name:\n    <input name=\"name\" data-qa=\"name\" type=\"text\" required>\n  </label>\n  <label for=\"position\">\n    Position:\n    <input name=\"position\" data-qa=\"position\" type=\"text\" required>\n  </label>\n  <label for=\"office\">\n    Office:\n    <select name=\"office\" data-qa=\"office\" id=\"office\" required>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label for=\"age\">\n    Age:\n    <input name=\"age\" data-qa=\"age\" type=\"number\" required>\n  </label>\n  <label for=\"salary\">\n    Salary:\n    <input name=\"salary\" data-qa=\"salary\" type=\"number\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>\n`);\n\ndocument.body.append(employeeForm);\n\nconst pushNotification = (\n  positionTop,\n  positionRight,\n  title,\n  description,\n  type\n) => {\n  const notification = document.createElement('div');\n  const titleNotification = document.createElement('h2');\n  const descriptionNotification = document.createElement('p');\n\n  notification.classList.add('notification', `${type}`);\n  notification.dataset.qa = 'notification';\n  titleNotification.classList.add('title');\n  descriptionNotification.classList.add('description');\n\n  titleNotification.innerText = title;\n  descriptionNotification.innerText = description;\n\n  notification.style.top = positionTop + 'px';\n  notification.style.right = positionRight + 'px';\n\n  notification.append(titleNotification, descriptionNotification);\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nconst submit = employeeForm.querySelector('button');\nconst input = employeeForm.querySelectorAll('input');\nconst select = employeeForm.querySelector('select');\n\nconst addToForm = (e) => {\n  e.preventDefault();\n\n  const inputValueName = input[0].value;\n  const inputValuePosition = input[1].value;\n  const selectValueOffice = select.value;\n  const inputValueAge = input[2].value;\n  const inputValueSalary = +input[3].value;\n\n  const minLengthOfInput = 4;\n  const minAgeForInput = 18;\n  const maxAgeForInput = 90;\n\n  if (inputValueName.length < 4) {\n    pushNotification(\n      150,\n      -0,\n      'error',\n      'value is less than 4 letters',\n      'error'\n    );\n  }\n\n  if (!inputValuePosition) {\n    pushNotification(\n      -0,\n      -0,\n      'error',\n      'Position is required',\n      'error'\n    );\n  }\n\n  if (!inputValueSalary) {\n    pushNotification(\n      450,\n      -0,\n      'error',\n      'Salary is required',\n      'error'\n    );\n  }\n\n  if (inputValueAge < minAgeForInput || inputValueAge > maxAgeForInput) {\n    pushNotification(\n      300,\n      -0,\n      'error',\n      'value is less than 18 or more than 90',\n      'error'\n    );\n  }\n\n  if (\n    inputValueName.length >= minLengthOfInput\n    && inputValuePosition\n    && inputValueSalary\n    && (\n      inputValueAge >= minAgeForInput\n      && inputValueAge <= maxAgeForInput\n    )\n  ) {\n    tbody.insertAdjacentHTML('beforeend', `<tr>\n      <td>${inputValueName}</td>\n      <td>${inputValuePosition}</td>\n      <td>${selectValueOffice}</td>\n      <td>${inputValueAge}</td>\n      <td>$${inputValueSalary.toLocaleString('en')}</td>\n    </tr>`);\n\n    pushNotification(\n      0,\n      -0,\n      'success',\n      'congrats',\n      'success'\n    );\n  }\n};\n\nfunction convertToNumber(string) {\n  return string.replace(/[^0-9]/g, '');\n}\n\nlet count = 1;\n\nconst sorted = (e) => {\n  const th = e.target.closest('th');\n  const thIndex = th.cellIndex;\n  const rowsList = [...tbody.children];\n\n  count++;\n\n  if (!thead.contains(th)) {\n    return;\n  }\n\n  switch (th.innerText) {\n    case 'Name':\n    case 'Position' :\n      rowsList.sort((currentString, nextString) => {\n        const currentStringText = currentString.cells[thIndex].innerText;\n        const nextStringText = nextString.cells[thIndex].innerText;\n\n        if (count % 2 === 0) {\n          return currentStringText.localeCompare(nextStringText);\n        }\n\n        if (count % 2 !== 0) {\n          return nextStringText.localeCompare(currentStringText);\n        }\n      });\n      break;\n\n    case 'Age':\n    case 'Salary':\n      rowsList.sort((currentItem, nextItem) => {\n        const currentItemNumber\n          = convertToNumber(currentItem.cells[thIndex].innerText);\n        const nextItemNumber\n          = convertToNumber(nextItem.cells[thIndex].innerText);\n\n        if (count % 2 === 0) {\n          return currentItemNumber - nextItemNumber;\n        }\n\n        if (count % 2 !== 0) {\n          return nextItemNumber - currentItemNumber;\n        }\n      });\n  }\n\n  rows.forEach(row => tbody.removeChild(row));\n  rowsList.forEach(row => tbody.appendChild(row));\n};\n\nsubmit.addEventListener('click', addToForm);\nthead.addEventListener('click', sorted);\n"]}